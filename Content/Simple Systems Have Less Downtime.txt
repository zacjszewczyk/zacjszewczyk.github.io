Type: linkpost
Title: Simple Systems Have Less Downtime
Link: https://www.gkogan.co/blog/simple-systems/
Pubdate: 2020/03/04 17:53:30
Author: Zac Szewczyk

Simple systems deploy faster than complex ones, and fail less often; sometimes they take less time to build, too, but the pursuit of simplicity often entails a long process to prioritize some features while justifying the exclusion of others. Ironically, that process tends to take much longer than just building in all the features, so most choose the latter approach. The end result is complex software that does many things, but few things well.

As a [fan of premature optimization](Linear Python.txt), I like to take the opposite approach, and to take it to the extreme. [My software](/projects.html#codingProjects)--and even my devices--tend to do one thing well. This makes the upfront cost higher in terms of time spent planning projects, writing code, and purchasing hardware, but also--since [I understand and control the entire stack](Good Times Create Weak Men.txt)--lowers the number of opaque systems that can fail as well as the knock-on effects of such an event. I consider this a worthwhile tradeoff, and I bet [Greg would, too](https://www.gkogan.co/blog/simple-systems/).
